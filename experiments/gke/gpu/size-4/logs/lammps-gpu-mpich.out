Defaulted container "lammps-gpu" out of: lammps-gpu, flux-view (init)
{"version": 1, "execution": {"R_lite": [{"rank": "0-3", "children": {"gpu": "0", "core": "0-1"}}], "starttime": 0.0, "expiration": 0.0, "nodelist": ["lammps-gpu-[0-3]"]}}
#!/bin/bash
set -euo pipefail
mkdir -p /tmp/output
flux resource list
for i in {1..5}
do
  echo "FLUX-RUN START lammps-gpu-iter-$i"
  flux run --setattr=user.study_id=lammps-gpu-iter-$i -N4 -n 4 -o cpu-affinity=per-task -o gpu-affinity=per-task    -g 1  lmp_gpu -k on g 1 -sf kk -pk kokkos cuda/aware off newton on neigh half -v x 32 -v y 16 -v z 16 -in in.reaxff.hns -nocite |& tee /tmp/lammps-gpu.out
  
   echo "FLUX-RUN END lammps-gpu-iter-$i"
done


output=./results/${app}
(apt-get update && apt-get install -y jq) || (yum update -y && yum install -y jq)
mkdir -p $output
for jobid in $(flux jobs -a --json | jq -r .jobs[].id); do
    echo
    study_id=$(flux job info $jobid jobspec | jq -r ".attributes.user.study_id")
    echo "FLUX-JOB START ${jobid} ${study_id}"
    echo "FLUX-JOB-JOBSPEC START"
    flux job info $jobid jobspec
    echo "FLUX-JOB-JOBSPEC END" 
    
    echo "FLUX-JOB-RESOURCES START"
    flux job info ${jobid} R
    echo "FLUX-JOB-RESOURCES END"
    echo "FLUX-JOB-EVENTLOG START" 
    flux job info $jobid guest.exec.eventlog
    echo "FLUX-JOB-EVENTLOG END" 
    echo "FLUX-JOB END ${jobid} ${study_id}"
done
echo "FLUX JOB STATS"
flux job stats         

     STATE NNODES   NCORES    NGPUS NODELIST
      free      4        8        4 lammps-gpu-[0-3]
 allocated      0        0        0 
      down      0        0        0 
FLUX-RUN START lammps-gpu-iter-1
LAMMPS (2 Apr 2025 - Development - 3215141)
LAMMPS (2 Apr 2025 - Development - 3215141)
LAMMPS (2 Apr 2025 - Development - 3215141)
LAMMPS (2 Apr 2025 - Development - 3215141)
Exception: Kokkos ERROR: Cuda memory space failed to allocate 4.551 GiB (label="qeq/kk:jlist").
KOKKOS mode with Kokkos version 4.6.0 is enabled (src/KOKKOS/kokkos.cpp:72)
  will use up to 1 GPU(s) per node
  using 1 OpenMP thread(s) per MPI task
Reading data file ...
  triclinic box = (0 0 0) to (22.326 11.1412 13.778966) with tilt (0 -5.02603 0)
  1 by 1 by 1 MPI processor grid
  reading atoms ...
  304 atoms
  reading velocities ...
  304 velocities
  read_data CPU = 0.013 seconds
Replication is creating a 32x16x16 = 8192 times larger system...
  triclinic box = (0 0 0) to (714.432 178.2592 220.46346) with tilt (0 -80.41648 0)
  1 by 1 by 1 MPI processor grid
  bounding box image = (0 -1 -1) to (0 1 1)
  bounding box extra memory = 0.03 MB
  average # of replicas added to proc = 8192.00 out of 8192 (100.00%)
  2490368 atoms
  replicate CPU = 0.375 seconds
Neighbor list info ...
  update: every = 20 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 11
  ghost atom cutoff = 11
  binsize = 11, bins = 73 17 21
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff/kk, perpetual
      attributes: half, newton off, ghost, kokkos_device
      pair build: half/bin/newtoff/ghost/kk/device
      stencil: full/ghost/bin/3d
      bin: kk/device
  (2) fix qeq/reax/kk, perpetual
      attributes: full, newton off, kokkos_device
      pair build: full/bin/kk/device
      stencil: full/bin/3d
      bin: kk/device
Setting up Verlet run ...
  Unit style    : real
  Current step  : 0
  Time step     : 0.1
Exception: Kokkos ERROR: Cuda memory space failed to allocate 4.551 GiB (label="qeq/kk:jlist").
KOKKOS mode with Kokkos version 4.6.0 is enabled (src/KOKKOS/kokkos.cpp:72)
  will use up to 1 GPU(s) per node
  using 1 OpenMP thread(s) per MPI task
Reading data file ...
  triclinic box = (0 0 0) to (22.326 11.1412 13.778966) with tilt (0 -5.02603 0)
  1 by 1 by 1 MPI processor grid
  reading atoms ...
  304 atoms
  reading velocities ...
  304 velocities
  read_data CPU = 0.013 seconds
Replication is creating a 32x16x16 = 8192 times larger system...
  triclinic box = (0 0 0) to (714.432 178.2592 220.46346) with tilt (0 -80.41648 0)
  1 by 1 by 1 MPI processor grid
  bounding box image = (0 -1 -1) to (0 1 1)
  bounding box extra memory = 0.03 MB
  average # of replicas added to proc = 8192.00 out of 8192 (100.00%)
  2490368 atoms
  replicate CPU = 0.385 seconds
Neighbor list info ...
  update: every = 20 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 11
  ghost atom cutoff = 11
  binsize = 11, bins = 73 17 21
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff/kk, perpetual
      attributes: half, newton off, ghost, kokkos_device
      pair build: half/bin/newtoff/ghost/kk/device
      stencil: full/ghost/bin/3d
      bin: kk/device
  (2) fix qeq/reax/kk, perpetual
      attributes: full, newton off, kokkos_device
      pair build: full/bin/kk/device
      stencil: full/bin/3d
      bin: kk/device
Setting up Verlet run ...
  Unit style    : real
  Current step  : 0
  Time step     : 0.1
Exception: Kokkos ERROR: Cuda memory space failed to allocate 4.551 GiB (label="qeq/kk:jlist").
KOKKOS mode with Kokkos version 4.6.0 is enabled (src/KOKKOS/kokkos.cpp:72)
  will use up to 1 GPU(s) per node
  using 1 OpenMP thread(s) per MPI task
Reading data file ...
  triclinic box = (0 0 0) to (22.326 11.1412 13.778966) with tilt (0 -5.02603 0)
  1 by 1 by 1 MPI processor grid
  reading atoms ...
  304 atoms
  reading velocities ...
  304 velocities
  read_data CPU = 0.014 seconds
Replication is creating a 32x16x16 = 8192 times larger system...
  triclinic box = (0 0 0) to (714.432 178.2592 220.46346) with tilt (0 -80.41648 0)
  1 by 1 by 1 MPI processor grid
  bounding box image = (0 -1 -1) to (0 1 1)
  bounding box extra memory = 0.03 MB
  average # of replicas added to proc = 8192.00 out of 8192 (100.00%)
  2490368 atoms
  replicate CPU = 0.405 seconds
Neighbor list info ...
  update: every = 20 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 11
  ghost atom cutoff = 11
  binsize = 11, bins = 73 17 21
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff/kk, perpetual
      attributes: half, newton off, ghost, kokkos_device
      pair build: half/bin/newtoff/ghost/kk/device
      stencil: full/ghost/bin/3d
      bin: kk/device
  (2) fix qeq/reax/kk, perpetual
      attributes: full, newton off, kokkos_device
      pair build: full/bin/kk/device
      stencil: full/bin/3d
      bin: kk/device
Setting up Verlet run ...
  Unit style    : real
  Current step  : 0
  Time step     : 0.1
Exception: Kokkos ERROR: Cuda memory space failed to allocate 4.551 GiB (label="qeq/kk:jlist").
KOKKOS mode with Kokkos version 4.6.0 is enabled (src/KOKKOS/kokkos.cpp:72)
  will use up to 1 GPU(s) per node
  using 1 OpenMP thread(s) per MPI task
Reading data file ...
  triclinic box = (0 0 0) to (22.326 11.1412 13.778966) with tilt (0 -5.02603 0)
  1 by 1 by 1 MPI processor grid
  reading atoms ...
  304 atoms
  reading velocities ...
  304 velocities
  read_data CPU = 0.014 seconds
Replication is creating a 32x16x16 = 8192 times larger system...
  triclinic box = (0 0 0) to (714.432 178.2592 220.46346) with tilt (0 -80.41648 0)
  1 by 1 by 1 MPI processor grid
  bounding box image = (0 -1 -1) to (0 1 1)
  bounding box extra memory = 0.03 MB
  average # of replicas added to proc = 8192.00 out of 8192 (100.00%)
  2490368 atoms
  replicate CPU = 0.388 seconds
Neighbor list info ...
  update: every = 20 steps, delay = 0 steps, check = no
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 11
  ghost atom cutoff = 11
  binsize = 11, bins = 73 17 21
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reaxff/kk, perpetual
      attributes: half, newton off, ghost, kokkos_device
      pair build: half/bin/newtoff/ghost/kk/device
      stencil: full/ghost/bin/3d
      bin: kk/device
  (2) fix qeq/reax/kk, perpetual
      attributes: full, newton off, kokkos_device
      pair build: full/bin/kk/device
      stencil: full/bin/3d
      bin: kk/device
Setting up Verlet run ...
  Unit style    : real
  Current step  : 0
  Time step     : 0.1
flux-job: task(s) exited with exit code 1
